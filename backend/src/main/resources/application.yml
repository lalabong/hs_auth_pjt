spring:
  application:
    name: HS Auth API

  # 보안 설정 파일 포함
  profiles:
    include: secret

  # 이메일 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  # 데이터베이스 설정 (개발용 H2)
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: root
    password: 1234

  # H2 콘솔 설정 (개발용)
  h2:
    console:
      enabled: true
      path: /h2-console

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /api

# 애플리케이션 설정
app:
  frontend-url: ${FRONTEND_URL:http://localhost:3000}

# 로깅 설정
logging:
  level:
    com.hs.auth: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# 프로파일별 설정
---
spring:
  config:
    activate:
      on-profile: prod

  # 프로덕션 데이터베이스 설정 (application-secret.yml에서 관리)
  datasource:
    url: ${database.mysql.url}
    username: ${database.mysql.username}
    password: ${database.mysql.password}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  h2:
    console:
      enabled: false

logging:
  level:
    com.hs.auth: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
